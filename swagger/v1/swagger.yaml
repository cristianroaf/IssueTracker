---
openapi: 3.0.1
info:
  title: "Issue Tracker"
  version: 1.0.0
servers: 
  - url: https://blooming-dusk-00596.herokuapp.com/
paths:

  "/api/issues":
  
    get:
      tags:
      - "Issues"
      summary: "Gets all the Issues"
      produces:
        - application/json      
      parameters:
      - in: query
        name: type
        description: Gets `Issue` objects by type
        required: false
        schema:
          type: "string"
          enum:
            - Bug
            - Enhancement
            - Proposal
            - Task
        
      - in: query
        name: priority
        description: Gets `Issue` objects by priority
        required: false
        schema:
          type: "string"
          enum:
            - Trivial
            - Minor
            - Major
            - Critical
            - Blocker
      - in: query
        name: status
        description: Gets `Issue` objects by status
        required: false
        schema:
          type: "string"
          enum:
            - New
            - Open
            - On hold
            - Resolved
            - Duplicate
            - Invalid
            - Won't fix
            - Closed
            - New&Open
      - in: query
        name: assignee
        description: Gets `Issue` objects by assignee
        required: false
        schema:
          type: integer
      - in: query
        name: watcher
        description: Gets `Issue` objects watched by a user
        required: false
        schema:
          type: "string"
      responses:
        '200':
          description: Successful response
          
    post:
      tags:
      - Issues
      summary: "Create a new Issue"
      description: ""
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        schema:
          type: "string"
      - in: query
        schema:
          type: "string"
        name: "Title"
        required: true
      - in: query
        schema:
          type: "string"
        name: "Description"
        required: false
      - in: "query"
        name: Type
        description: Set the type of `Issue`
        required: false
        schema:
          type: "string"
          enum:
            - Bug
            - Enhancement
            - Proposal
            - Task
      - in: "query"
        name: Priority
        description: Set the priority of `Issue`
        required: false
        schema:
          type: "string"
          enum:
            - Trivial
            - Minor
            - Major
            - Critical
            - Blocker
      - in: "query"
        name: assegnee
        description: Set the man in charge of `Issue`
        required: false
        schema:
          type: "string"
          enum:
            - Trivial
            - Minor
            - Major
            - Critical
            - Blocker
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      produces:
      - "application/json"  
      responses:
        '200':
          description: successful
        405:
          description: "Invalid input"
  "/issues/new":
    get:
      summary: new issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/edit":
    parameters:
    - name: id
      in: path
      schema:
          type: "string"
      description: id
      required: true
    get:
      summary: edit issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}":
    parameters:
    - name: id
      in: path
      schema:
          type: "string"
      description: id
      required: true
    get:
      summary: show issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
    put:
      summary: update issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
    delete:
      summary: delete issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/":
    get:
      summary: list issues
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/vote":
    parameters:
    - name: id
      in: path
      schema:
        type: "string"
      description: id
      required: true
    post:
      summary: vote issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/watch":
    parameters:
    - name: id
      in: path
      schema:
        type: "string"
      description: id
      required: true
    post:
      summary: watch issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/status":
    parameters:
    - name: id
      in: path
      schema:
        type: "string"
      description: id
      required: true
    put:
      summary: update_status issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/users":
    get:
      summary: list users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      parameters:
      - name: name
        in: query
      - email: emai√±
        in: query
      - password: password
      - in: query    
      responses:
        '200':
          description: successful
  "/users/new":
    get:
      summary: new user
      responses:
        '200':
          description: successful
  "/users/{id}/edit":
    parameters:
    - name: id
      in: path
      schema:
        type: "string"
      description: id
      required: true
    get:
      summary: edit user
      responses:
        '200':
          description: successful
  "/users/{id}":
    parameters:
    - name: id
      in: path
      schema:
        type: "string"
      description: id
      required: true
    get:
      summary: show user
      responses:
        '200':
          description: successful
    put:
      summary: update user
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      responses:
        '200':
          description: successful


  "/issues/{issue_id}/comments":
    parameters:
    - name: issue_id
      in: path
      schema:
        type: "string"
      description: issue_id
      required: true
    get:
      produces:
      - "application/json"
      summary: list comments
      responses:
        '200':
          description: successful
    post:
      summary: create comment
      produces:
      - "application/json"
      responses:
        '200':
  "/issues/{issue_id}/comments/new":
    parameters:
    - name: issue_id
      in: path
      schema:
        type: "string"
      description: issue_id
      required: true
    - name: api_key
      in: path
      schema:
        type: "string"
      description: api_key
      required: true
    get:
      summary: new comment
      responses:
        '200':
          description: successful
  "/issues/{issue_id}/comments/{id}/edit":
    parameters:
    - name: issue_id
      in: path
      schema:
        type: "string"
      description: issue_id
      required: true
    - name: id
      in: path
      schema:
        type: "string"
      description: id
      required: true
    get:
      summary: edit comment
      responses:
        '200':
          description: successful
  "/issues/{issue_id}/comments/{id}":
    parameters:
    - name: issue_id
      in: path
      schema:
        type: "string"
      description: issue_id
      required: true
    - name: comment_id
      in: path
      schema:
        type: "string"
      description: comment_id
      required: true
    get:
      summary: show comment
      responses:
        '200':
          description: successful
    put:
      summary: update comment
      responses:
        '200':
          description: successful
    delete:
      summary: delete comment
      responses:
        '200':
          description: successful
  