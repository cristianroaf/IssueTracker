---
swagger: "2.0"
info:
  description: "This is the documentation file for ASW Issue Tracker."
  version: "1.0.0"
  title: "Issue Tracker"
host: blooming-dusk-00596.herokuapp.com
paths:
  /issues:
    get:
      tags:
      - "Issues"
      summary: "Gets all the Issues"
      produces:
      - "application/json"
      parameters:
        - in: query
          name: type
          description: Gets `Issue` objects by type
          required: false
          type: string
          enum:
            - Bug
            - Enhancement
            - Proposal
            - Task
        - in: query
          name: priority
          description: Gets `Issue` objects by priority
          required: false
          type: string
          enum:
            - Trivial
            - Minor
            - Major
            - Critical
            - Blocker
        - in: query
          name: status
          description: Gets `Issue` objects by status
          required: false
          type: string
          enum:
            - New
            - Open
            - On hold
            - Resolved
            - Duplicate
            - Invalid
            - Won't fix
            - Closed
            - New&Open
        - in: query
          name: assignee
          description: Gets `Issue` objects by assignee
          required: false
          type: integer
        - in: query
          name: watcher
          description: Gets `Issue` objects watched by a user
          required: false
          type: integer
      responses:
        '422':
          description: User does not exist
          schema:
            type: object
            properties:
              error:
                example: User with id=1000 does not exist
        '200':
          description: successful
    post:
      produces:
      - "application/json"
      tags:
      - Issues
      summary: "Create a new Issue"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      - in: query
        type: string
        name: "Title"
        required: true
      - in: query
        type: string
        name: "Description"
        required: false
      - in: "formData"
        name: Type
        description: Set the type of `Issue`
        required: false
        type: string
        enum:
          - Bug
          - Enhancement
          - Proposal
          - Task
      - in: "formData"
        name: Priority
        description: Set the priority of `Issue`
        required: false
        type: string
        enum:
          - Trivial
          - Minor
          - Major
          - Critical
          - Blocker
      - in: "formData"
        name: assegnee
        description: Set the man in charge of `Issue`
        required: false
        type: string
        enum:
          - Trivial
          - Minor
          - Major
          - Critical
          - Blocker
      responses:
        '200':
          description: successful
        405:
          description: "Invalid input"
        
  "/issues/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
    put:
      summary: update issue
      tags:
      - Issues
      consumes:
      - "application/x-www-form-urlencoded"
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      - in: "query"
        type: string
        name: "Title"
        required: true
      - in: "query"
        type: string
        name: "Description"
        required: false
      - in: "formData"
        name: Type
        description: Set the type of `Issue`
        required: false
        type: string
        enum:
          - Bug
          - Enhancement
          - Proposal
          - Task
      - in: "formData"
        name: Priority
        description: Set the priority of `Issue`
        required: false
        type: string
        enum:
          - Trivial
          - Minor
          - Major
          - Critical
          - Blocker
      - in: "formData"
        name: assegnee
        description: Set the man in charge of `Issue`
        required: false
        type: string
        enum:
          - Trivial
          - Minor
          - Major
          - Critical
          - Blocker
      - in: "formData"
        name: Status
        description: Set the man in charge of `Issue`
        required: false
        type: string
        enum:
          - Open
          - On hold
          - Resolved
          - Duplicate
          - Invalid
          - Won't fix
          - Closed
      responses:
        '200':
          description: successful
    delete:
      summary: delete issue
      description: ""
      operationId: "deleteIssueID"
      produces:
      - "application/json"
      tags:
      - Issues
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      responses:
        '200':
          description: successful
  "/":
    get:
      summary: list issues
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/vote":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    post:
      summary: vote issue
      tags:
      - Issues
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      responses:
        '200':
          description: successful
  "/issues/{id}/watch":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    post:
      summary: watch issue
      tags:
      - Issues
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      responses:
        '200':
          description: successful
