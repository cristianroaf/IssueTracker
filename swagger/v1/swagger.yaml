---
openapi: 3.0.1
info:
  title: "Issue Tracker"
  version: 1.0.0
  host: "----HEROKU-URL----"
paths:
#  "/blogs":
#    post:
#      summary: Creates a blog
#      tags:
#      - Blogs
#      consumes:
#      - application/json
#      - application/xml
#      parameters:
#      - name: blog
#        in: body
#        schema:
#          type: object
#          properties:
#            title:
#              type: string
#            content:
#              type: string
#          required:
#          - title
#          - content
#      responses:
#        '201':
#          description: blog created
#        '422':
#          description: invalid request
#  "/blogs/{id}":
#    get:
#      summary: Retrieves a blog
#      tags:
#      - Blogs
#      produces:
#      - application/json
#      - application/xml
#      parameters:
#      - name: id
#        in: path
#        type: string
#        required: true
#      responses:
#        '200':
#          description: blog found
#          schema:
#            type: object
#            properties:
#              id:
#                type: integer
#              title:
#                type: string
#              content:
#                type: string
#            required:
#            - id
#            - title
#            - content
#        '404':
#          description: blog not found
#        '406':
 #         description: unsupported accept header
  "/issues/{issue_id}/comments":
    parameters:
    - name: issue_id
      in: path
      type: string
      description: issue_id
      required: true
    get:
      produces:
      - "application/json"
      summary: list comments
      responses:
        '200':
          description: successful
    post:
      produces:
      - "application/json"
      summary: create comment
      responses:
        '200':
  "/issues/{issue_id}/comments/new":
    parameters:
    - name: issue_id
      in: path
      type: string
      description: issue_id
      required: true
    - name: api_key
      in: path
      type: string
      description: api_key
      required: true
    get:
      summary: new comment
      responses:
        '200':
          description: successful
  "/issues/{issue_id}/comments/{id}/edit":
    parameters:
    - name: issue_id
      in: path
      type: string
      description: issue_id
      required: true
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: edit comment
      responses:
        '200':
          description: successful
  "/issues/{issue_id}/comments/{id}":
    parameters:
    - name: issue_id
      in: path
      type: string
      description: issue_id
      required: true
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show comment
      responses:
        '200':
          description: successful
    put:
      summary: update comment
      responses:
        '200':
          description: successful
    delete:
      summary: delete comment
      responses:
        '200':
          description: successful
  "/issues":
    get:
      summary: list issues
      tags:
      - Issues
      responses:
        '200':
          description: successful
    post:
      produces:
      - "application/json"
      tags:
      - Issues
      summary: "Create a new Issue"
      description: ""
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: true
        type: "string"
      - in: query
        type: string
        name: "Title"
        required: true
      - in: query
        type: string
        name: "Description"
        required: false
      - in: "formData"
        name: Type
        description: Set the type of `Issue`
        required: false
        type: string
        enum:
          - Bug
          - Enhancement
          - Proposal
          - Task
      - in: "formData"
        name: Priority
        description: Set the priority of `Issue`
        required: false
        type: string
        enum:
          - Trivial
          - Minor
          - Major
          - Critical
          - Blocker
      - in: "formData"
        name: assegnee
        description: Set the man in charge of `Issue`
        required: false
        type: string
        enum:
          - Trivial
          - Minor
          - Major
          - Critical
          - Blocker
      responses:
        '200':
          description: successful
        405:
          description: "Invalid input"
  "/issues/new":
    get:
      summary: new issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/edit":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: edit issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
    put:
      summary: update issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
    delete:
      summary: delete issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/":
    get:
      summary: list issues
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/vote":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    post:
      summary: vote issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/watch":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    post:
      summary: watch issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/issues/{id}/status":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    put:
      summary: update_status issue
      tags:
      - Issues
      responses:
        '200':
          description: successful
  "/users":
    get:
      summary: list users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      responses:
        '200':
          description: successful
  "/users/new":
    get:
      summary: new user
      responses:
        '200':
          description: successful
  "/users/{id}/edit":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: edit user
      responses:
        '200':
          description: successful
  "/users/{id}":
    parameters:
    - name: id
      in: path
      type: string
      description: id
      required: true
    get:
      summary: show user
      responses:
        '200':
          description: successful
    put:
      summary: update user
      responses:
        '200':
          description: successful
    delete:
      summary: delete user
      responses:
        '200':
          description: successful
